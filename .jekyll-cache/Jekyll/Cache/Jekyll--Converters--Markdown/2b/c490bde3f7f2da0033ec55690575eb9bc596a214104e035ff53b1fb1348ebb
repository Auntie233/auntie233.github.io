I"<h1 id="1-spring-security">1. Spring Security</h1>

<h2 id="1-配置安全策略">1. 配置安全策略</h2>

<p>实现WebSecurityConfigurerAdapter类并Enable WebSecurity</p>

<h2 id="2-创建基础用户类型">2. 创建基础用户类型</h2>

<p>实现UserDetails接口或其子接口，并实现getAuthorities()方法。</p>

<h2 id="3-编写鉴权实现类">3. 编写鉴权实现类</h2>

<p>编写AuthenticationProvider的子类，实现鉴权方法authenticate(Authentication auth)，其中参数auth为鉴权凭证<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote">1</a></sup>，常用的凭证类型为UsernamePasswordAuthenticationToken，即为用户名密码登录token。</p>

<p>为实现鉴权操作，该类需要被spring托管，添加鉴权服务类即开发者自己提供的UserService。</p>

<p>实现supports(Class&lt;?&gt; authentication)，判断该方法用于多鉴权环境下区分鉴权策略，方法体为判断authentication类型。</p>

<h2 id="4-自定义安全策略">4. 自定义安全策略</h2>

<p>编写SecurityConfigurerAdapter&lt;T, H&gt;的子类。其中T为安全过滤链，通常情况下为DefaultSecurityFilterChain。H为安全策略类型，通常情况下为HttpSecurity。 安全策略的注入需要在总HttpSecurity中apply方法传入。</p>

<h2 id="5-其他句柄">5. 其他句柄</h2>

<ul>
  <li>AuthenticationFailureHandler	认证失败</li>
  <li>LogoutHandler	登出</li>
  <li>WebResponseExceptionTranslator	认证异常统一处理</li>
  <li>AuthenticationSuccessHandler	认证成功</li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>AuthenticationToken <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>
:ET